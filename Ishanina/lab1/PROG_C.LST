Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Page     1-1


				; –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã 
				–Ω–∞ –∞—Å—Å–µ–º–±–ª–µ—Ä–µ –¥–ª—è –º–æ–¥—É–ª—è —
				Ç–∏–ø–∞ .COM
 0000				CODE	SEGMENT
						ASSUME	CS:CODE, DS:CODE, ES:NO
				THING, SS:NOTHING 
 0100						ORG	100H
 0100  E9 01F3 R		START:	JMP	BEGIN
				; –î–ê–ù–ù–´–ï
				;STRING	db	'–ó–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—
				Ä–∞  AX=	',0DH,0AH,'$'
 0103  54 79 70 65 20 79	STRING	db	'Type your PC: $'
       6F 75 72 20 50 43	
       3A 20 24			
 0112  50 43 24			STRING_ONE		db	'PC$'
 0115  50 43 2F 58 54 24	STRING_TWO		db	'PC/XT$'
 011B  41 54 24			STRING_TREE		db	'AT$'
 011E  50 53 32 20 6D 6F	STRING_FOUR		db	'PS2 model 30$'
       64 65 6C 20 33 30	
       24			
 012B  50 53 32 20 6D 6F	STRING_FIVE		db	'PS2 model 80$'
       64 65 6C 20 38 30	
       24			
 0138  50 43 6A 72 24		STRING_SIX		db	'PCjr$'
 013D  50 43 20 43 6F 6E	STRING_SEVEN	db	'PC Convertible$'
       76 65 72 74 69 62	
       6C 65 24			
 014C  0D 0A 4F 53 20 76	VERSI			db	0DH, 0AH, 'OS v
				ersion: 0 .0   $'
       65 72 73 69 6F 6E	
       3A 20 30 20 2E 30	
       20 20 20 24		
 0162  0D 0A 4F 45 4D 3A	OEM 			db	0DH, 0AH, 'OEM:
				     ', '$'
       20 20 20 20 20 24	
 016E  0D 0A 53 65 72 69	NUMBER 			db	0DH, 0AH, 'Seri
				al number:        ', '$'
       61 6C 20 6E 75 6D	
       62 65 72 3A 20 20	
       20 20 20 20 20 20	
       24			
 0187  45 52 52 4F 52 20	ERRO			db	'ERROR ERROR ER
				ROR!', 0DH, 0AH, '$'
       45 52 52 4F 52 20	
       45 52 52 4F 52 21	
       0D 0A 24			
				;----------------------------------------------
				-------
				;–ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤
				–æ–ª–∞ –≤ 16 —Å/—Å
 019C				TETR_TO_HEX	PROC	near
				 
 019C  24 0F					and	AL,0Fh
 019E  3C 09					cmp	AL,09
Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Page     1-2


 01A0  76 02					jbe	NEXT
 01A2  04 07					add	AL,07
						
 01A4  04 30			NEXT:	add	AL,30h
 01A6  C3					ret 
				
 01A7				TETR_TO_HEX	ENDP
				
				;–ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–π –±–∞–π—Ç –
				≤ AL –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ –¥–≤–∞ —Å–∏–º–≤–
				æ–ª–∞ —à–µ—Å—Ç–Ω. —á–∏—Å–ª–∞ –≤ AX
 01A7				BYTE_TO_HEX	PROC	near
				
 01A7  51					push CX
 01A8  8A E0					mov	AH,AL
 01AA  E8 019C R				call TETR_TO_HEX
 01AD  86 C4					xchg AL,AH
 01AF  B1 04					mov	CL,4
 01B1  D2 E8					shr	AL,CL
 01B3  E8 019C R				call TETR_TO_HEX 	;–≤ AL 
				—Å—Ç–∞—Ä—à–∞—è —Ü–∏—Ñ—Ä–∞
 01B6  59					pop	CX		
						;–≤ AH –º–ª–∞–¥—à–∞—è —Ü–∏—Ñ—Ä–
				∞
 01B7  C3					ret 
						
 01B8				BYTE_TO_HEX	ENDP
				
				;–ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–π –ø—Ä–æ–∏—Å
				—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ–≤–æ–¥ –≤ 16 c/c  16-—Ç–∏  —
				Ä–∞–∑—Ä—è–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞
				; –≤ AX - —á–∏—Å–ª–æ, DI - –∞–¥—Ä–µ—Å –ø–æ—Å–ª–
				µ–¥–Ω–µ–≥–æ —Å–∏–º–≤–æ–ª–∞
 01B8				WRD_TO_HEX	PROC	near
				
 01B8  53					push	BX
 01B9  8A FC					mov	BH,AH
 01BB  E8 01A7 R				call	BYTE_TO_HEX
 01BE  88 25					mov	[DI],AH
 01C0  4F					dec	DI
 01C1  88 05					mov	[DI],AL
 01C3  4F					dec	DI
 01C4  8A C7					mov	AL,BH
 01C6  E8 01A7 R				call	BYTE_TO_HEX
 01C9  88 25					mov	[DI],AH
 01CB  4F					dec	DI
 01CC  88 05					mov	[DI],AL
 01CE  5B					pop	BX
 01CF  C3					ret 
 01D0				WRD_TO_HEX ENDP
				
				;–ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—
				Ç –ø–µ—Ä–µ–≤–æ–¥ –≤ 10c/c, SI - –∞–¥—Ä–µ—Å –ø–æ
				–ª—è –º–ª–∞–¥—à–µ–π —Ü–∏—Ñ—Ä—ã
Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Page     1-3


 01D0				BYTE_TO_DEC	PROC	near
				
 01D0  51					push	CX
 01D1  52					push	DX
 01D2  32 E4					xor	AH,AH
 01D4  33 D2					xor	DX,DX
 01D6  B9 000A					mov	CX,10 
						
 01D9  F7 F1			loop_bd:div	CX
 01DB  80 CA 30					or	DL,30h
 01DE  88 14					mov	[SI],DL
 01E0  4E					dec	SI
 01E1  33 D2					xor	DX,DX
 01E3  3D 000A					cmp	AX,10
 01E6  73 F1					jae	loop_bd
 01E8  3C 00					cmp	AL,00h
 01EA  74 04					je	end_l
 01EC  0C 30					or	AL,30h
 01EE  88 04					mov	[SI],AL
						
 01F0  5A			end_l:	pop	DX
 01F1  59					pop	CX
 01F2  C3					ret
						
 01F3				BYTE_TO_DEC	ENDP
				
				; –ö–û–î
				 
 01F3				BEGIN:
				
 01F3  B8 F000			mov	AX, 0F000H
 01F6  8E C0				mov	ES, AX
 01F8  26: A0 FFFE			mov	AL, ES:[0FFFEH]	
 01FC  BA 0103 R			mov	DX, OFFSET STRING	
					; –í—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ 
				–∏–∑ –ø–æ–ª—è STRING
					
 01FF  50				push	AX
 0200  B4 09			       	mov	AH, 09h
 0202  CD 21			        int	21h
 0204  58				pop	AX 
				
 0205  3C FF				cmp 	AL, 0FFH
 0207  BA 0112 R			mov	DX, OFFSET STRING_ONE
 020A  EB 47 90				jmp 	RESULT
 020D  3C FE				cmp 	AL, 0FEH
 020F  BA 0115 R			mov 	DX, OFFSET STRING_TWO
 0212  EB 3F 90				jmp 	RESULT
 0215  3C FB				cmp 	AL, 0FBH
 0217  BA 0115 R			mov 	DX, OFFSET STRING_TWO
 021A  EB 37 90				jmp 	RESULT
 021D  3C FC				cmp	AL, 0FCH
 021F  BA 011B R			mov 	DX, OFFSET STRING_TREE
 0222  EB 2F 90				jmp 	RESULT
Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Page     1-4


 0225  3C FA				cmp 	AL, 0FAH
 0227  BA 011E R			mov 	DX, OFFSET STRING_FOUR
 022A  EB 27 90				jmp 	RESULT
 022D  3C F8				cmp 	AL, 0F8H
 022F  BA 012B R			mov 	DX, OFFSET STRING_FIVE
 0232  EB 1F 90				jmp 	RESULT
 0235  3C FD				cmp 	AL, 0FDH
 0237  BA 0138 R			mov 	DX, OFFSET STRING_SIX
 023A  EB 17 90				jmp 	RESULT
 023D  3C F9				cmp 	AL, 0F9H
 023F  BA 013D R			mov 	DX, OFFSET STRING_SEVEN
 0242  EB 0F 90				jmp 	RESULT	
				
 0245  BF 0187 R			mov	DI, OFFSET ERRO
 0248  83 C7 24				add	DI, 24h
 024B  E8 01A7 R			call	BYTE_TO_HEX
 024E  89 05				mov	[DI], AX
 0250  BA 0187 R			mov	DX, OFFSET ERRO
				
 0253				RESULT:
 0253  50				push	AX
 0254  B4 09			       	mov	AH, 09h
 0256  CD 21			        int	21h
 0258  58				pop	AX 
				
 0259  B4 30				mov	AH, 30H
 025B  CD 21				int	21H
 025D  50				push 	AX
					
 025E  BE 014C R		    mov	SI, OFFSET VERSI
 0261  83 C6 0F				add	SI, 0FH
 0264  E8 01D0 R			call BYTE_TO_DEC
 0267  83 C6 04				add	SI, 4h 
 026A  58				pop	AX
 026B  8A C4				mov	AL, AH
 026D  E8 01D0 R			call BYTE_TO_DEC
 0270  BA 014C R			mov	DX, OFFSET VERSI
					
 0273  50				push	AX
 0274  B4 09			    mov	AH, 09h
 0276  CD 21			    int	21h
 0278  58				pop	AX 
				
 0279  BE 0162 R			mov SI, OFFSET OEM
 027C  83 C6 08				add SI, 8H
 027F  8A C7				mov	AL, BH
 0281  E8 01D0 R			call BYTE_TO_DEC
 0284  BA 0162 R			mov	DX, OFFSET OEM
						
 0287  50				push AX
 0288  B4 09			    mov	AH, 09h
 028A  CD 21			    int	21h
 028C  58				pop	AX 
				       
Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Page     1-5


 028D  BF 016E R			mov	DI, OFFSET NUMBER 
 0290  83 C7 16				add	DI, 16H
 0293  8B C1				mov	AX, CX
 0295  E8 01B8 R			call	WRD_TO_HEX
 0298  8A C3				mov	AL, BL
 029A  E8 01A7 R			call 	BYTE_TO_HEX
 029D  83 EF 02				sub	DI, 2H
 02A0  89 05				mov	[DI], AX
 02A2  BA 016E R			mov	DX, OFFSET NUMBER 
					
 02A5  50				push	AX
 02A6  B4 09			       	mov	AH, 09h
 02A8  CD 21			        int	21h
 02AA  58				pop	AX 
				
 02AB  32 C0				xor	AL, AL		; –í—ã—Ö–æ–¥ –≤
				 DOS
 02AD  B4 4C				mov	AH, 4CH
 02AF  CD 21				int	21H
				
				
				
 02B1				CODE	ENDS
						END	START	;–∫–æ–Ω–µ—Ü –º–
				æ–¥—É–ª—è, START - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	02B1	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BEGIN  . . . . . . . . . . . . .  	L NEAR	01F3	CODE
BYTE_TO_DEC  . . . . . . . . . .  	N PROC	01D0	CODE	Length = 0023
BYTE_TO_HEX  . . . . . . . . . .  	N PROC	01A7	CODE	Length = 0011

END_L  . . . . . . . . . . . . .  	L NEAR	01F0	CODE
ERRO . . . . . . . . . . . . . .  	L BYTE	0187	CODE

LOOP_BD  . . . . . . . . . . . .  	L NEAR	01D9	CODE

NEXT . . . . . . . . . . . . . .  	L NEAR	01A4	CODE
NUMBER . . . . . . . . . . . . .  	L BYTE	016E	CODE

OEM  . . . . . . . . . . . . . .  	L BYTE	0162	CODE

RESULT . . . . . . . . . . . . .  	L NEAR	0253	CODE

START  . . . . . . . . . . . . .  	L NEAR	0100	CODE
STRING . . . . . . . . . . . . .  	L BYTE	0103	CODE
STRING_FIVE  . . . . . . . . . .  	L BYTE	012B	CODE
STRING_FOUR  . . . . . . . . . .  	L BYTE	011E	CODE
STRING_ONE . . . . . . . . . . .  	L BYTE	0112	CODE
STRING_SEVEN . . . . . . . . . .  	L BYTE	013D	CODE
STRING_SIX . . . . . . . . . . .  	L BYTE	0138	CODE
STRING_TREE  . . . . . . . . . .  	L BYTE	011B	CODE
STRING_TWO . . . . . . . . . . .  	L BYTE	0115	CODE

TETR_TO_HEX  . . . . . . . . . .  	N PROC	019C	CODE	Length = 000B

VERSI  . . . . . . . . . . . . .  	L BYTE	014C	CODE

WRD_TO_HEX . . . . . . . . . . .  	N PROC	01B8	CODE	Length = 0018

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  prog_c		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  3/10/20 15:11:04
                                                             Symbols-2



    198 Source  Lines
    198 Total   Lines
     28 Symbols

  47886 + 455277 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
