Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-1


 0000				PART2	SEGMENT
				ASSUME	CS:PART2,	DS:PART2,	ES:NOTH
				ING,	SS:NOTHING
 0100				ORG	100H
				
 0100  E9 0333 R		START:	JMP BEGIN
				
 0103  41 76 61 69 6C 61	quantity_available_memory  db  'Available memor
				y:          bytes;',0dh,0ah,'$'
       62 6C 65 20 6D 65	
       6D 6F 72 79 3A 20	
       20 20 20 20 20 20	
       20 20 20 62 79 74	
       65 73 3B 0D 0A 24	
 0127  45 78 74 65 6E 64	extended_memory_size  db  'Extended memory:    
				       kilobytes;',0dh,0ah,'$'
       65 64 20 6D 65 6D	
       6F 72 79 3A 20 20	
       20 20 20 20 20 20	
       20 20 20 6B 69 6C	
       6F 62 79 74 65 73	
       3B 0D 0A 24		
 014F  4C 69 73 74 20 6F	MCB_List  db  'List of MCB:',0dh,0ah,'$'
       66 20 4D 43 42 3A	
       0D 0A 24			
 015E  54 79 70 65 3A 20	MCB_Type  db  'Type:   h; $'
       20 20 68 3B 20 24	
 016A  53 65 67 6D 65 6E	MCB_Seg  db  'Segment`s adress:     h; $'
       74 60 73 20 61 64	
       72 65 73 73 3A 20	
       20 20 20 20 68 3B	
       20 24			
 0184  53 69 7A 65 3A 20	MCB_Size  db  'Size:       b$'
       20 20 20 20 20 20	
       62 24			
 0192  3B 20 20 20 20 20	MCB_Tail  db  ';               ',0dh,0ah,'$'
       20 20 20 20 20 20	
       20 20 20 20 0D 0A	
       24			
				
 01A5				TETR_TO_HEX	PROC	near
 01A5  24 0F					and	al,0fh
 01A7  3C 09					cmp	al,09
 01A9  76 02					jbe	NEXT
 01AB  04 07					add	al,07
 01AD  04 30			NEXT:	add	al,30h
 01AF  C3					ret
 01B0				TETR_TO_HEX	ENDP
				;---------------------------
 01B0				BYTE_TO_HEX	PROC near
 01B0  51					push cx
 01B1  8A E0					mov	ah,al
 01B3  E8 01A5 R				call TETR_TO_HEX
 01B6  86 C4					xchg al,ah
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-2


 01B8  B1 04					mov	cl,4
 01BA  D2 E8					shr	al,cl
 01BC  E8 01A5 R				call TETR_TO_HEX
 01BF  59					pop	cx 	
 01C0  C3					ret
 01C1				BYTE_TO_HEX	ENDP
				;--------------------------
 01C1				WRD_TO_HEX	PROC	near
				
 01C1  53					push bx
 01C2  8A FC					mov	bh,ah
 01C4  E8 01B0 R				call BYTE_TO_HEX
 01C7  88 25					mov	[di],ah
 01C9  4F					dec	di
 01CA  88 05					mov	[di],al
 01CC  4F					dec	di
 01CD  8A C7					mov	al,bh
 01CF  E8 01B0 R				call BYTE_TO_HEX
 01D2  88 25					mov	[di],ah
 01D4  4F					dec	di
 01D5  88 05					mov	[di],al
 01D7  5B					pop	bx
 01D8  C3					ret
 01D9				WRD_TO_HEX	ENDP
				;----------------------------
 01D9				BYTE_TO_DEC	PROC	near
				
 01D9  51					push cx
 01DA  52					push dx
 01DB  50					push ax
 01DC  32 E4					xor	ah,ah
 01DE  33 D2					xor	dx,dx
 01E0  B9 000A					mov	cx,10
 01E3					loop_bd:
 01E3  F7 F1					div	cx
 01E5  80 CA 30					or 	dl,30h
 01E8  88 14					mov [si],dl
 01EA  4E					dec si
 01EB  33 D2					xor	dx,dx
 01ED  3D 000A					cmp	ax,10
 01F0  73 F1					jae	loop_bd
 01F2  3D 0000					cmp	ax,00h
 01F5  76 04					jbe	end_l
 01F7  0C 30					or	al,30h
 01F9  88 04					mov	[si],al
 01FB					end_l:	
 01FB  58					pop	ax
 01FC  5A					pop	dx
 01FD  59					pop	cx
 01FE  C3					ret
 01FF				BYTE_TO_DEC	ENDP
				;---------------------------
 01FF				WRD_TO_DEC	PROC	near
				
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-3


 01FF  51					push cx
 0200  52					push dx
 0201  50					push ax
 0202  B9 000A					mov	cx,10
 0205					wrd_loop_bd:
 0205  F7 F1					div	cx
 0207  80 CA 30					or 	dl,30h
 020A  88 14					mov [si],dl
 020C  4E					dec si
 020D  33 D2					xor	dx,dx
 020F  3D 000A					cmp	ax,10
 0212  73 F1					jae	wrd_loop_bd
 0214  3D 0000					cmp	ax,00h
 0217  76 04					jbe	wrd_end_l
 0219  0C 30					or	al,30h
 021B  88 04					mov	[si],al
 021D					wrd_end_l:	
 021D  58					pop	ax
 021E  5A					pop	dx
 021F  59					pop	cx
 0220  C3					ret
 0221				WRD_TO_DEC	ENDP
				
 0221				GET_MEMORY    PROC    near
 0221  50					push ax
 0222  53					push bx
 0223  51					push cx
 0224  52					push dx
 0225  BB FFFF					mov bx, 0ffffh
 0228  B4 4A					mov ah, 4Ah
 022A  CD 21			    	int 21h
 022C  8B C3			    	mov ax, bx
 022E  B9 0010			    	mov cx, 10h
 0231  F7 E1			    	mul cx
 0233  8D 36 011C R		    	lea si, quantity_available_memory+25
 0237  E8 01FF R		    	call WRD_TO_DEC
 023A  8D 16 0103 R				lea	dx, quantity_available_
				memory
 023E  B4 09					mov	ah,09h
 0240  CD 21					int	21h
						
 0242  8D 06 0343 R				lea ax, END_S
 0246  BB 0010				    mov bx, 10h
 0249  2B D2					sub dx, dx
 024B  F7 F3					div bx
 024D  40					inc ax
 024E  8B D8					mov bx, ax
 0250  B0 00					mov al, 0
 0252  B4 4A					mov ah, 4Ah
 0254  CD 21					int 21h
				
 0256  5A					pop	dx
 0257  59					pop	cx
 0258  5B					pop	bx
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-4


 0259  58					pop	ax
 025A  C3					ret
 025B				GET_MEMORY    ENDP
				;---------------------------
 025B				GET_EXT_MEMORY    PROC    near
 025B  50					push ax
 025C  53					push bx
 025D  56					push si
 025E  52					push dx
 025F  B0 30					mov	al, 30h 
 0261  E6 70					out	70h, al 
 0263  E4 71					in	al, 71h 
 0265  8A D8					mov	bl, al 
 0267  B0 31					mov	al, 31h 
 0269  E6 70					out	70h, al
 026B  E4 71					in	al, 71h 
 026D  8A E0					mov ah, al
 026F  8A C3					mov al, bl 
 0271  2B D2					sub dx, dx
 0273  8D 36 0140 R				lea si, extended_memory_size+25
 0277  E8 01FF R				call WRD_TO_DEC
 027A  8D 16 0127 R				lea dx, extended_memory_size
 027E  B4 09					mov	ah,09h
 0280  CD 21					int	21h
 0282  5A					pop	dx
 0283  5E					pop	si
 0284  5B					pop	bx
 0285  58					pop	ax
 0286  C3					ret
 0287				GET_EXT_MEMORY    ENDP
				;---------------------------
 0287				GET_TAIL	PROC	near
 0287  56					push si
 0288  51					push cx
 0289  53					push bx
 028A  50					push ax
 028B  BB 0008					mov	bx,0008h
 028E  B9 0004					mov	cx,4
 0291					RE:
 0291  26: 8B 07				mov	ax,es:[bx]
 0294  89 04					mov	[si],ax
 0296  83 C3 02					add bx,2h
 0299  83 C6 02					add	si,2h
 029C  E2 F3					loop RE
 029E  58					pop	ax
 029F  5B			    	pop	bx
 02A0  59			    	pop	cx
 02A1  5E					pop	si
 02A2  C3					ret
 02A3				GET_TAIL	ENDP
				;---------------------------
 02A3				GET_MCB	PROC  near
 02A3  50					push ax
 02A4  53					push bx
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-5


 02A5  51					push cx
 02A6  52					push dx
 02A7  8D 16 014F R				lea	dx, MCB_List
 02AB  B4 09					mov	ah,09h
 02AD  CD 21					int	21h
 02AF  B4 52					mov	ah,52h
 02B1  CD 21					int	21h
 02B3  26: 8E 47 FE				mov	es,es:[bx-2]
 02B7  BB 0001					mov	bx,1
 02BA					REPEAT:
 02BA  2B C0					sub	ax,ax
 02BC  2B C9					sub	cx,cx
 02BE  2B FF					sub	di,di
 02C0  2B F6					sub	si,si
 02C2  26: A0 0000				mov	al,es:[0000h]
 02C6  E8 01B0 R				call BYTE_TO_HEX
 02C9  8D 3E 0164 R				lea	di,MCB_Type+6
 02CD  89 05					mov	[di],ax
 02CF  3D 4135					cmp	ax,4135h
 02D2  74 5A					je 	MEN_BX
 02D4					STEP:
 02D4  8D 3E 017F R				lea	di,MCB_Seg+21
 02D8  26: A1 0001				mov	ax,es:[0001h]
 02DC  E8 01C1 R				call WRD_TO_HEX
 02DF  26: A1 0003				mov	ax,es:[0003h]
 02E3  B9 0010					mov cx,10h
 02E6  F7 E1				    mul cx
 02E8  8D 36 0190 R			    lea	si,MCB_Size+12
 02EC  E8 01FF R				call WRD_TO_DEC
 02EF  8D 16 015E R				lea	dx,MCB_Type
 02F3  B4 09					mov	ah,09h
 02F5  CD 21					int	21h
 02F7  8D 16 016A R				lea	dx,MCB_Seg
 02FB  B4 09					mov	ah,09h
 02FD  CD 21					int	21h
 02FF  8D 16 0184 R				lea	dx,MCB_Size
 0303  B4 09					mov	ah,09h
 0305  CD 21					int	21h
				
 0307  8D 36 0194 R				lea	si,MCB_Tail+2
 030B  E8 0287 R				call GET_TAIl
 030E  8D 16 0192 R				lea	dx,MCB_Tail
 0312  B4 09					mov	ah,09h
 0314  CD 21					int	21h
				
 0316  83 FB 00					cmp	bx,0
 0319  74 0E					jz	END_P
 031B  33 C0					xor ax, ax
 031D  8C C0				    mov ax, es
 031F  26: 03 06 0003			    add ax, es:[0003h]
 0324  40				    inc ax
 0325  8E C0				    mov es, ax
 0327  EB 91					jmp REPEAT
 0329					END_P:
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Page     1-6


 0329  5A					pop	dx
 032A  59					pop	cx
 032B  5B					pop	bx
 032C  58					pop	ax
 032D  C3					ret
 032E					MEN_BX:
 032E  BB 0000					mov	bx,0
 0331  EB A1					jmp STEP
 0333				GET_MCB		ENDP
				;---------------------------
 0333				BEGIN:
 0333  E8 0221 R				call GET_MEMORY
 0336  E8 025B R				call GET_EXT_MEMORY
 0339  E8 02A3 R				call GET_MCB
				
 033C  32 C0					xor	al,al
 033E  B4 3C					mov	ah,3Ch
 0340  CD 21					int	21h
 0342  C3					ret
 0343						END_S:
 0343				PART2	ENDS
				END 	START
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

PART2  . . . . . . . . . . . . .  	0343	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BEGIN  . . . . . . . . . . . . .  	L NEAR	0333	PART2
BYTE_TO_DEC  . . . . . . . . . .  	N PROC	01D9	PART2	Length = 0026
BYTE_TO_HEX  . . . . . . . . . .  	N PROC	01B0	PART2	Length = 0011

END_L  . . . . . . . . . . . . .  	L NEAR	01FB	PART2
END_P  . . . . . . . . . . . . .  	L NEAR	0329	PART2
END_S  . . . . . . . . . . . . .  	L NEAR	0343	PART2
EXTENDED_MEMORY_SIZE . . . . . .  	L BYTE	0127	PART2

GET_EXT_MEMORY . . . . . . . . .  	N PROC	025B	PART2	Length = 002C
GET_MCB  . . . . . . . . . . . .  	N PROC	02A3	PART2	Length = 0090
GET_MEMORY . . . . . . . . . . .  	N PROC	0221	PART2	Length = 003A
GET_TAIL . . . . . . . . . . . .  	N PROC	0287	PART2	Length = 001C

LOOP_BD  . . . . . . . . . . . .  	L NEAR	01E3	PART2

MCB_LIST . . . . . . . . . . . .  	L BYTE	014F	PART2
MCB_SEG  . . . . . . . . . . . .  	L BYTE	016A	PART2
MCB_SIZE . . . . . . . . . . . .  	L BYTE	0184	PART2
MCB_TAIL . . . . . . . . . . . .  	L BYTE	0192	PART2
MCB_TYPE . . . . . . . . . . . .  	L BYTE	015E	PART2
MEN_BX . . . . . . . . . . . . .  	L NEAR	032E	PART2

NEXT . . . . . . . . . . . . . .  	L NEAR	01AD	PART2

QUANTITY_AVAILABLE_MEMORY  . . .  	L BYTE	0103	PART2

RE . . . . . . . . . . . . . . .  	L NEAR	0291	PART2
REPEAT . . . . . . . . . . . . .  	L NEAR	02BA	PART2

START  . . . . . . . . . . . . .  	L NEAR	0100	PART2
STEP . . . . . . . . . . . . . .  	L NEAR	02D4	PART2

TETR_TO_HEX  . . . . . . . . . .  	N PROC	01A5	PART2	Length = 000B

WRD_END_L  . . . . . . . . . . .  	L NEAR	021D	PART2
WRD_LOOP_BD  . . . . . . . . . .  	L NEAR	0205	PART2
WRD_TO_DEC . . . . . . . . . . .  	N PROC	01FF	PART2	Length = 0022
WRD_TO_HEX . . . . . . . . . . .  	N PROC	01C1	PART2	Length = 0018

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lr3_2		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:18:34
                                                             Symbols-2



    265 Source  Lines
    265 Total   Lines
     35 Symbols

  47824 + 453291 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
