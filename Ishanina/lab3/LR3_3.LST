Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-1


 0000				PART3	SEGMENT
				ASSUME	CS:PART3,	DS:PART3,	ES:NOTH
				ING,	SS:NOTHING
 0100				ORG	100H
				
 0100  E9 033A R		START:	JMP BEGIN
				
 0103  41 76 61 69 6C 61	quantity_available_memory  db  'Available memor
				y:          bytes;',0dh,0ah,'$'
       62 6C 65 20 6D 65	
       6D 6F 72 79 3A 20	
       20 20 20 20 20 20	
       20 20 20 62 79 74	
       65 73 3B 0D 0A 24	
 0127  45 78 74 65 6E 64	extended_memory_size  db  'Extended memory:    
				       kilobytes;',0dh,0ah,'$'
       65 64 20 6D 65 6D	
       6F 72 79 3A 20 20	
       20 20 20 20 20 20	
       20 20 20 6B 69 6C	
       6F 62 79 74 65 73	
       3B 0D 0A 24		
 014F  4C 69 73 74 20 6F	MCB_List  db  'List of MCB:',0dh,0ah,'$'
       66 20 4D 43 42 3A	
       0D 0A 24			
 015E  54 79 70 65 3A 20	MCB_Type  db  'Type:   h; $'
       20 20 68 3B 20 24	
 016A  53 65 67 6D 65 6E	MCB_Seg  db  'Segment`s adress:     h; $'
       74 60 73 20 61 64	
       72 65 73 73 3A 20	
       20 20 20 20 68 3B	
       20 24			
 0184  53 69 7A 65 3A 20	MCB_Size  db  'Size:       b$'
       20 20 20 20 20 20	
       62 24			
 0192  3B 20 20 20 20 20	MCB_Tail  db  ';               ',0dh,0ah,'$'
       20 20 20 20 20 20	
       20 20 20 20 0D 0A	
       24			
				
 01A5				TETR_TO_HEX	PROC	near
 01A5  24 0F					and	al,0fh
 01A7  3C 09					cmp	al,09
 01A9  76 02					jbe	NEXT
 01AB  04 07					add	al,07
 01AD  04 30			NEXT:		add	al,30h
 01AF  C3					ret
 01B0				TETR_TO_HEX	ENDP
				;---------------------------
 01B0				BYTE_TO_HEX	PROC near
 01B0  51					push	cx
 01B1  8A E0					mov	ah,al
 01B3  E8 01A5 R				call	TETR_TO_HEX
 01B6  86 C4					xchg	al,ah
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-2


 01B8  B1 04					mov	cl,4
 01BA  D2 E8					shr	al,cl
 01BC  E8 01A5 R				call	TETR_TO_HEX
 01BF  59					pop	cx 	
 01C0  C3					ret
 01C1				BYTE_TO_HEX	ENDP
				;--------------------------
 01C1				WRD_TO_HEX	PROC	near
				
 01C1  53					push	bx
 01C2  8A FC					mov	bh,ah
 01C4  E8 01B0 R				call	BYTE_TO_HEX
 01C7  88 25					mov	[di],ah
 01C9  4F					dec	di
 01CA  88 05					mov	[di],al
 01CC  4F					dec	di
 01CD  8A C7					mov	al,bh
 01CF  E8 01B0 R				call	BYTE_TO_HEX
 01D2  88 25					mov	[di],ah
 01D4  4F					dec	di
 01D5  88 05					mov	[di],al
 01D7  5B					pop	bx
 01D8  C3					ret
 01D9				WRD_TO_HEX	ENDP
				;----------------------------
 01D9				BYTE_TO_DEC	PROC	near
				
 01D9  51					push	cx
 01DA  52					push	dx
 01DB  50					push	ax
 01DC  32 E4					xor	ah,ah
 01DE  33 D2					xor	dx,dx
 01E0  B9 000A					mov	cx,10
 01E3					loop_bd:
 01E3  F7 F1					div	cx
 01E5  80 CA 30					or 	dl,30h
 01E8  88 14					mov 	[si],dl
 01EA  4E					dec 	si
 01EB  33 D2					xor	dx,dx
 01ED  3D 000A					cmp	ax,10
 01F0  73 F1					jae	loop_bd
 01F2  3D 0000					cmp	ax,00h
 01F5  76 04					jbe	end_l
 01F7  0C 30					or	al,30h
 01F9  88 04					mov	[si],al
 01FB					end_l:	
 01FB  58					pop	ax
 01FC  5A					pop	dx
 01FD  59					pop	cx
 01FE  C3					ret
 01FF				BYTE_TO_DEC	ENDP
				;---------------------------
 01FF				WRD_TO_DEC	PROC	near
				
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-3


 01FF  51					push	cx
 0200  52					push	dx
 0201  50					push	ax
 0202  B9 000A					mov	cx,10
 0205					wrd_loop_bd:
 0205  F7 F1					div	cx
 0207  80 CA 30					or 	dl,30h
 020A  88 14					mov 	[si],dl
 020C  4E					dec 	si
 020D  33 D2					xor	dx,dx
 020F  3D 000A					cmp	ax,10
 0212  73 F1					jae	wrd_loop_bd
 0214  3D 0000					cmp	ax,00h
 0217  76 04					jbe	wrd_end_l
 0219  0C 30					or	al,30h
 021B  88 04					mov	[si],al
 021D					wrd_end_l:	
 021D  58					pop	ax
 021E  5A					pop	dx
 021F  59					pop	cx
 0220  C3					ret
 0221				WRD_TO_DEC	ENDP
				
 0221				GET_MEMORY    PROC    near
 0221  50					push 	ax
 0222  53					push 	bx
 0223  51					push 	cx
 0224  52					push 	dx
 0225  BB FFFF					mov 	bx, 0ffffh
 0228  B4 4A					mov 	ah, 4Ah
 022A  CD 21			    		int 	21h
 022C  8B C3			    		mov 	ax, bx
 022E  B9 0010			    		mov 	cx, 10h
 0231  F7 E1			    		mul 	cx
 0233  8D 36 011C R		    		lea  	si, quantity_available_
				memory+25
 0237  E8 01FF R		    		call 	WRD_TO_DEC
 023A  8D 16 0103 R				lea	dx, quantity_available_
				memory
 023E  B4 09					mov	ah,09h
 0240  CD 21					int	21h
						
 0242  8D 06 034A R				lea 	ax, END_S
 0246  BB 0010				    	mov 	bx, 10h
 0249  2B D2					sub 	dx, dx
 024B  F7 F3					div 	bx
 024D  40					inc 	ax
 024E  8B D8					mov 	bx, ax
 0250  B0 00					mov 	al, 0
 0252  B4 4A					mov 	ah, 4Ah
 0254  CD 21					int 	21h
				
						;xor	ax, ax
 0256  B4 48					mov	ah,48h
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-4


 0258  BB 1000					mov	bx, 1000h
 025B  CD 21					int 	21h
				
 025D  5A					pop	dx
 025E  59					pop	cx
 025F  5B					pop	bx
 0260  58					pop	ax
 0261  C3					ret
 0262				GET_MEMORY    ENDP
				;---------------------------
 0262				GET_EXT_MEMORY    PROC    near
 0262  50					push 	ax
 0263  53					push 	bx
 0264  56					push 	si
 0265  52					push 	dx
 0266  B0 30					mov	al, 30h 
 0268  E6 70					out	70h, al 
 026A  E4 71					in	al, 71h 
 026C  8A D8					mov	bl, al 
 026E  B0 31					mov	al, 31h 
 0270  E6 70					out	70h, al
 0272  E4 71					in	al, 71h 
 0274  8A E0					mov 	ah, al
 0276  8A C3					mov 	al, bl 
 0278  2B D2					sub 	dx, dx
 027A  8D 36 0140 R				lea 	si, extended_memory_siz
				e+25
 027E  E8 01FF R				call 	WRD_TO_DEC
 0281  8D 16 0127 R				lea 	dx, extended_memory_siz
				e
 0285  B4 09					mov	ah,09h
 0287  CD 21					int	21h
 0289  5A					pop	dx
 028A  5E					pop	si
 028B  5B					pop	bx
 028C  58					pop	ax
 028D  C3					ret
 028E				GET_EXT_MEMORY    ENDP
				;---------------------------
 028E				GET_TAIL	PROC	near
 028E  56					push 	si
 028F  51					push 	cx
 0290  53					push 	bx
 0291  50					push 	ax
 0292  BB 0008					mov	bx,0008h
 0295  B9 0004					mov	cx,4
 0298					RE:
 0298  26: 8B 07				mov	ax,es:[bx]
 029B  89 04					mov	[si],ax
 029D  83 C3 02					add 	bx,2h
 02A0  83 C6 02					add	si,2h
 02A3  E2 F3					loop 	RE
 02A5  58					pop	ax
 02A6  5B			    		pop	bx
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-5


 02A7  59			    		pop	cx
 02A8  5E					pop	si
 02A9  C3					ret
 02AA				GET_TAIL	ENDP
				;---------------------------
 02AA				GET_MCB	PROC  near
 02AA  50					push 	ax
 02AB  53					push 	bx
 02AC  51					push 	cx
 02AD  52					push 	dx
 02AE  8D 16 014F R				lea	dx, MCB_List
 02B2  B4 09					mov	ah,09h
 02B4  CD 21					int	21h
 02B6  B4 52					mov	ah,52h
 02B8  CD 21					int	21h
 02BA  26: 8E 47 FE				mov	es,es:[bx-2]
 02BE  BB 0001					mov	bx,1
 02C1					REPEAT:
 02C1  2B C0					sub	ax,ax
 02C3  2B C9					sub	cx,cx
 02C5  2B FF					sub	di,di
 02C7  2B F6					sub	si,si
 02C9  26: A0 0000				mov	al,es:[0000h]
 02CD  E8 01B0 R				call 	BYTE_TO_HEX
 02D0  8D 3E 0164 R				lea	di,MCB_Type+6
 02D4  89 05					mov	[di],ax
 02D6  3D 4135					cmp	ax,4135h
 02D9  74 5A					je 	MEN_BX
 02DB					STEP:
 02DB  8D 3E 017F R				lea	di,MCB_Seg+21
 02DF  26: A1 0001				mov	ax,es:[0001h]
 02E3  E8 01C1 R				call 	WRD_TO_HEX
 02E6  26: A1 0003				mov	ax,es:[0003h]
 02EA  B9 0010					mov 	cx,10h
 02ED  F7 E1				    	mul 	cx
 02EF  8D 36 0190 R			    	lea	si,MCB_Size+12
 02F3  E8 01FF R				call 	WRD_TO_DEC
 02F6  8D 16 015E R				lea	dx,MCB_Type
 02FA  B4 09					mov	ah,09h
 02FC  CD 21					int	21h
 02FE  8D 16 016A R				lea	dx,MCB_Seg
 0302  B4 09					mov	ah,09h
 0304  CD 21					int	21h
 0306  8D 16 0184 R				lea	dx,MCB_Size
 030A  B4 09					mov	ah,09h
 030C  CD 21					int	21h
				
 030E  8D 36 0194 R				lea	si,MCB_Tail+2
 0312  E8 028E R				call 	GET_TAIl
 0315  8D 16 0192 R				lea	dx,MCB_Tail
 0319  B4 09					mov	ah,09h
 031B  CD 21					int	21h
				
 031D  83 FB 00					cmp	bx,0
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Page     1-6


 0320  74 0E					jz	END_P
 0322  33 C0					xor 	ax, ax
 0324  8C C0				    	mov 	ax, es
 0326  26: 03 06 0003			    	add 	ax, es:[0003h]
 032B  40				    	inc 	ax
 032C  8E C0				    	mov 	es, ax
 032E  EB 91					jmp 	REPEAT
 0330					END_P:
 0330  5A					pop	dx
 0331  59					pop	cx
 0332  5B					pop	bx
 0333  58					pop	ax
 0334  C3					ret
 0335					MEN_BX:
 0335  BB 0000					mov	bx,0
 0338  EB A1					jmp 	STEP
 033A				GET_MCB		ENDP
				;---------------------------
 033A				BEGIN:
 033A  E8 0221 R				call 	GET_MEMORY
 033D  E8 0262 R				call 	GET_EXT_MEMORY
 0340  E8 02AA R				call 	GET_MCB
				
 0343  32 C0					xor	al,al
 0345  B4 3C					mov	ah,3Ch
 0347  CD 21					int	21h
 0349  C3					ret
 034A						END_S:
 034A				PART3	ENDS
				END 	START
Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

PART3  . . . . . . . . . . . . .  	034A	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BEGIN  . . . . . . . . . . . . .  	L NEAR	033A	PART3
BYTE_TO_DEC  . . . . . . . . . .  	N PROC	01D9	PART3	Length = 0026
BYTE_TO_HEX  . . . . . . . . . .  	N PROC	01B0	PART3	Length = 0011

END_L  . . . . . . . . . . . . .  	L NEAR	01FB	PART3
END_P  . . . . . . . . . . . . .  	L NEAR	0330	PART3
END_S  . . . . . . . . . . . . .  	L NEAR	034A	PART3
EXTENDED_MEMORY_SIZE . . . . . .  	L BYTE	0127	PART3

GET_EXT_MEMORY . . . . . . . . .  	N PROC	0262	PART3	Length = 002C
GET_MCB  . . . . . . . . . . . .  	N PROC	02AA	PART3	Length = 0090
GET_MEMORY . . . . . . . . . . .  	N PROC	0221	PART3	Length = 0041
GET_TAIL . . . . . . . . . . . .  	N PROC	028E	PART3	Length = 001C

LOOP_BD  . . . . . . . . . . . .  	L NEAR	01E3	PART3

MCB_LIST . . . . . . . . . . . .  	L BYTE	014F	PART3
MCB_SEG  . . . . . . . . . . . .  	L BYTE	016A	PART3
MCB_SIZE . . . . . . . . . . . .  	L BYTE	0184	PART3
MCB_TAIL . . . . . . . . . . . .  	L BYTE	0192	PART3
MCB_TYPE . . . . . . . . . . . .  	L BYTE	015E	PART3
MEN_BX . . . . . . . . . . . . .  	L NEAR	0335	PART3

NEXT . . . . . . . . . . . . . .  	L NEAR	01AD	PART3

QUANTITY_AVAILABLE_MEMORY  . . .  	L BYTE	0103	PART3

RE . . . . . . . . . . . . . . .  	L NEAR	0298	PART3
REPEAT . . . . . . . . . . . . .  	L NEAR	02C1	PART3

START  . . . . . . . . . . . . .  	L NEAR	0100	PART3
STEP . . . . . . . . . . . . . .  	L NEAR	02DB	PART3

TETR_TO_HEX  . . . . . . . . . .  	N PROC	01A5	PART3	Length = 000B

WRD_END_L  . . . . . . . . . . .  	L NEAR	021D	PART3
WRD_LOOP_BD  . . . . . . . . . .  	L NEAR	0205	PART3
WRD_TO_DEC . . . . . . . . . . .  	N PROC	01FF	PART3	Length = 0022
WRD_TO_HEX . . . . . . . . . . .  	N PROC	01C1	PART3	Length = 0018

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  lr3_3		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  4/14/20 23:24:03
                                                             Symbols-2



    270 Source  Lines
    270 Total   Lines
     35 Symbols

  47824 + 453291 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
